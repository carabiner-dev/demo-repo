name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for pushing the images to ghcr.io
      attestations: write # needed to push attestations

    env:
      GO111MODULE: on
      COSIGN_EXPERIMENTAL: "true"

    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Tejolote
        uses: kubernetes-sigs/release-actions/setup-tejolote@a30d93cf2aa029e1e4c8a6c79f766aebf429fddb # v0.3.1

      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod
          cache: false

      - name: Get TAG
        id: tag
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: TmpDir
        id: tmpdir
        run: |
          TMP_DIR=$(mktemp -d ${HOME}/.build.XXXXXX )
          echo "TMP_DIR=${TMP_DIR}" >> $GITHUB_OUTPUT

      - name: Build
        id: run-build
        run: |
          go build -o "${{ steps.tmpdir.outputs.TMP_DIR }}/hello-linux-amd64" . 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        uses: kubernetes-sigs/release-actions/publish-release@a30d93cf2aa029e1e4c8a6c79f766aebf429fddb # v0.3.1
        with:
            assets: "${{ steps.tmpdir.outputs.TMP_DIR }}/hello-linux-amd64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup bnd
        uses: carabiner-dev/actions/install/bnd@HEAD

      - name: Setup snappy
        uses: carabiner-dev/actions/install/snappy@HEAD

      - name: Setup unpack
        uses: carabiner-dev/actions/install/unpack@HEAD

      - name: Generate SBOM
        run: |
          mkdir attestations
          unpack extract . --ignore-other-codebases -f spdx --attest > attestations/spdx.intoto.json
          unpack extract . --ignore-other-codebases -f spdx > attestations/${{ github.event.repository.name }}-${{ steps.tag.outputs.TAG }}.spdx.json
     
      - run: |
          tejolote attest --artifacts github://${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}/${{ steps.tag.outputs.TAG }} github://${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}/${{ github.run_id }} --output attestations/slsa.intoto.json 
          cat attestations/slsa.intoto.json
          bnd statement attestations/slsa.intoto.json --out attestations/slsa.bundle.json

      - name: Attest Security Insights
        id: attest-si
        run: |
          bnd commit --predicate-git-path=SECURITY-INSIGHTS.yml --type=https://github.com/ossf/security-insights-spec --yaml --repo . > attestations/si.bundle.json
          cat attestations/si.bundle.json

      - name: Generate MFA attestation
        env:
           GITHUB_TOKEN: ${{ github.token }}
        run: |
            snappy snap builtin:github/mfa.yaml -v ORG=${{ github.event.repository.owner.login }} --attest > attestations/mfa.intoto.json
            bnd statement attestations/mfa.intoto.json --out attestations/mfa.bundle.json
            bnd push github ${{github.repository}} attestations/mfa.bundle.json
        id: attest-mfa
  
      - name: Generate org attestation
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          snappy snap builtin:github/org.yaml -v BRANCH=main -v REPO=${{ github.event.repository.name }} -v ORG=${{ github.event.repository.owner.login }} --attest > attestations/org.intoto.json
          bnd statement attestations/org.intoto.json --out attestations/org.bundle.json
          bnd push github ${{github.repository}} attestations/org.bundle.json
        id: attest-org

      - name: Generate branch rules attestation
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          snappy snap builtin:github/branch-rules.yaml -v BRANCH=main -v REPO=${{ github.event.repository.name }} -v ORG=${{ github.event.repository.owner.login }} --attest > attestations/branch.intoto.json
          bnd statement attestations/branch.intoto.json --out attestations/branch.bundle.json
          bnd push github ${{github.repository}} attestations/branch.bundle.json
        id: attest-branch

      - name: Generate repository attestation
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          snappy snap builtin:github/repo.yaml -v BRANCH=main -v REPO=${{ github.event.repository.name }} -v ORG=${{ github.event.repository.owner.login }} --attest > attestations/repo.intoto.json
          bnd statement attestations/repo.intoto.json --out attestations/repo.bundle.json
          bnd push github ${{github.repository}} attestations/repo.bundle.json
        id: attest-repo
  
      - name: Pack Attestations
        id: pack-attestations
        run: |
          bnd pack attestations/si.bundle.json attestations/slsa.bundle.json attestations/spdx.intoto.json attestations/mfa.bundle.json attestations/org.bundle.json attestations/branch.bundle.json attestations/repo.bundle.json > attestations.jsonl

      - name: upload-attestation
        id: upload-release-asset 
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          files: |
              attestations.jsonl
              attestations/${{ github.event.repository.name }}-${{ steps.tag.outputs.TAG }}.spdx.json
          tag_name: "${{ steps.tag.outputs.TAG }}"
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: ${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}
